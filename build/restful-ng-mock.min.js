(function(e){"use strict";angular.module("secureNgResource",["ngResource","ngCookies"]),angular.module("secureNgResource").factory("authSession",["$q","$location","$cookieStore","$injector","$rootScope","$timeout",function(e,t,n,s,o,r){var i={sessionName:"angular",loginPath:"/login",logoutUrl:null,defaultPostLoginPath:"/"},a={},u=function(e,t){this.auth=e,this.settings=angular.extend({},i,t),this.priorPath=null,this.state=null,this.managedHttpConfs=[],this.refreshPromise=null,a[this.cookieKey()]=this;var s=n.get(this.cookieKey());s?this.state=s:this.reset()};u.prototype={getUserName:function(){return this.loggedIn()?this.state.user:void 0},loggedIn:function(){return null!==this.state},login:function(e){var n=this;return this.auth.checkLogin(e).then(function(s){n.state=s.newState,null===n.state||"user"in n.state||(n.state.user=e.user),n._onStateChange();var o=n.settings.defaultPostLoginPath;null!==n.priorPath&&(o=n.priorPath),t.path(o).replace()})},cancelLogin:function(){this.auth.cancelLogin()},refreshLogin:function(){if(!this.loggedIn())throw"Cannot refresh, not logged in.";var e=this;return this.auth.refreshLogin(this.state).then(function(t){var n=e.state.user;e.state=t.newState,null===e.state||"user"in e.state||(e.state.user=n),e._onStateChange()})},logout:function(){if(this.loggedIn()){if(null!==this.settings.logoutUrl){var e=s.get("$http"),n={method:"POST",data:"",url:this.settings.logoutUrl};this.updateRequestConf(n),e(n)}this.reset(),t.path(this.settings.loginPath)}},reset:function(){this.state=null,this._onStateChange()},cookieKey:function(){return this.settings.sessionName+"-"+this.auth.getAuthType()},updateRequestConf:function(e){e.sessionDictKey=this.cookieKey(),this.loggedIn()&&(e.headers||(e.headers={}),this.auth.addAuthToRequestConf(e,this.state))},manageRequestConf:function(e){this.managedHttpConfs.push({conf:e,original:angular.copy(e)}),this.updateRequestConf(e)},reupdateManagedRequestConfs:function(){var e=this;angular.forEach(this.managedHttpConfs,function(t){for(var n in t.conf)delete t.conf[n];var s=angular.copy(t.original);angular.extend(t.conf,s),e.updateRequestConf(t.conf)})},handleHttpResponse:function(n){var s=this.auth.checkResponse(n);return s.authFailure?(this.reset(),this.priorPath=t.path(),t.path(this.settings.loginPath).replace(),e.reject(n)):n},_onStateChange:function(){if(this.reupdateManagedRequestConfs(),null!==this.state){if(n.put(this.cookieKey(),this.state),null!==this.refreshPromise&&r.cancel(this.refreshPromise),"millisecondsToRefresh"in this.state){var e=this;this.refreshPromise=r(function(){e.refreshLogin()},this.state.millisecondsToRefresh)}}else null!==this.refreshPromise&&(r.cancel(this.refreshPromise),this.refreshPromise=null),n.remove(this.cookieKey())}};var h=function(e,t){return new u(e,t)};return h.dictionary=a,h}]),angular.module("secureNgResource").factory("openIDAuth",["$q",function(t){var n=function(e,t){this.host=e,this.beginPath=t};n.prototype={getAuthType:function(){return"OpenIDAuth"},checkLogin:function(n){var s=t.defer();if(e.handleAuthResponse=function(t){delete e.handleAuthResponse,delete e.openIdPopup,t.approved?s.resolve({status:"accepted",newState:{sessionId:t.sessionId}}):s.reject({status:"denied",msg:t.message||"Access denied"})},e.hasOwnProperty("openIdPopup"))return"focus"in e.openIdPopup&&e.openIdPopup.focus(),void 0;var o="width=450,height=500,location=1,status=1,resizable=yes",r=e.open("","openid_popup",o);r.document.write('<form id="shimform" method="post" action="'+this.host+this.beginPath+'">'+'<input type="hidden" name="openid_identifier" id="oid" />'+"</form>");var i=n.openid_identifier;return r.document.getElementById("oid").value=i,r.document.getElementById("shimform").submit(),e.openIdPopup=r,s.promise},cancelLogin:function(){e.hasOwnProperty("openIdPopup")&&(e.openIdPopup.close(),delete e.openIdPopup,delete e.handleAuthResponse)},refreshLogin:function(){var e=t.defer(),n=e.promise;return e.reject(),n},checkResponse:function(e){var t={};return(401===e.status||403===e.status)&&(t.authFailure=!0),t},addAuthToRequestConf:function(e,t){e.headers.Authorization="SesID "+t.sessionId}};var s=function(e,t){return new n(e,t)};return s}]),angular.module("secureNgResource").factory("passwordOAuth",["$http","$q",function(e,t){var n=function(e,t,n){this.host=e,this.clientId=t,this.clientSecret=n},s=function(e){var t="";return angular.forEach(e,function(e,n){t.length>0&&(t+="&"),t+=n+"="+encodeURIComponent(e)}),t},o=function(e){if(200===e.status&&angular.isString(e.data.access_token)){var t=e.data;return{status:"accepted",newState:{accessToken:t.access_token,accessTokenExpires:(new Date).getTime()+t.expires_in,millisecondsToRefresh:1e3*t.expires_in/2,refreshToken:t.refresh_token}}}if(400===e.status&&"invalid_grant"===e.data.error)return{status:"denied",msg:"Invalid username or password"};var n="HTTP Status "+e.status;return 0===e.status?n="Unable to connect to authentication server":e.data.error_description&&(n="OAuth:"+e.data.error_description),{status:"error",msg:n}};n.prototype={getAuthType:function(){return"PasswordOAuth"},checkLogin:function(n){var r=t.defer();return e({method:"POST",url:this.host+"/oauth/v2/token",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:s({client_id:this.clientId,client_secret:this.clientSecret,grant_type:"password",username:n.user,password:n.pass})}).then(function(e){var t=o(e);"accepted"===t.status?r.resolve(t):r.reject(t)}),r.promise},cancelLogin:function(){},refreshLogin:function(n){var r=t.defer();return e({method:"POST",url:this.host+"/oauth/v2/token",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:s({client_id:this.clientId,client_secret:this.clientSecret,grant_type:"refresh_token",refresh_token:n.refreshToken})}).then(function(e){var t=o(e);"accepted"===t.status?(t.newState.refreshToken||(t.newState.refreshToken=n.refreshToken),r.resolve(t)):r.reject(t)}),r.promise},checkResponse:function(e){var t={};return 401===e.status&&(t.authFailure=!0),t},addAuthToRequestConf:function(e,t){e.headers.Authorization="Bearer "+t.accessToken}};var r=function(e,t,s){return new n(e,t,s)};return r}]),angular.module("secureNgResource").factory("secureResource",["$resource",function(e){var t={get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}};return function(n,s,o,r){var i=angular.extend({},t,r);angular.forEach(i,function(e){n.manageRequestConf(e)}),s=s.replace(/^([^\/].+?)(:\d+\/)/g,"$1\\$2");var a=e(s,o,i);return a}}]),angular.module("secureNgResource").config(["$httpProvider",function(e){e.responseInterceptors.push(["authSession",function(e){var t=function(t){var n=e.dictionary[t.config.sessionDictKey];return n?n.handleHttpResponse(t):t};return function(e){return e.then(t,t)}}])}])})(window);